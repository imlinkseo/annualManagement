import type { Metadata } from "next";
import "@/styles/globals.css";
import pretendard from "@/fonts/pretendard";
import { cookies } from "next/headers";
import { createServerClient } from "@supabase/ssr";
import AuthStoreProvider from "@/providers/AuthStoreProvider";
import Header from "@/components/ui/Header";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = cookies();

  const supabase = createServerClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        get: async (key) => (await cookieStore).get(key)?.value,
        set: () => {},
        remove: () => {},
      },
    }
  );

  const { data: userRes } = await supabase.auth.getUser();
  const authUser = userRes?.user ?? null;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  let initialEmployee: any = null;

  if (authUser?.id) {
    const { data, error } = await supabase
      .from("employees_with_unused")
      .select("*")
      .eq("user_id", authUser.id)
      .maybeSingle();

    if (!error && data) {
      initialEmployee = data;
    }
  }

  return (
    <html lang="ko" className={pretendard.variable}>
      <body>
        <AuthStoreProvider
          initialUser={authUser}
          initialEmployee={initialEmployee}
        >
          <div id="wrapper">
            <Header />
            <section id="contents">{children}</section>
          </div>
        </AuthStoreProvider>
      </body>
    </html>
  );
}
